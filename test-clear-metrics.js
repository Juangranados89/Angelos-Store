// Script para probar las m√©tricas claras de inversi√≥n
const https = require('https');

function fetchData(url) {
  return new Promise((resolve, reject) => {
    https.get(url, (res) => {
      let data = '';
      res.on('data', (chunk) => { data += chunk; });
      res.on('end', () => {
        try {
          resolve(JSON.parse(data));
        } catch (e) {
          reject(e);
        }
      });
    }).on('error', reject);
  });
}

async function testClearMetrics() {
  console.log("üîç PROBANDO M√âTRICAS CLARAS DE INVERSI√ìN\n");
  
  try {
    // Probar el nuevo endpoint de investment
    console.log("üìä Probando endpoint /api/investment...");
    const investment = await fetchData('https://angelos-web-t1o7.onrender.com/api/investment');
    
    console.log("\nüéØ M√âTRICAS CLARAS:");
    console.log("=".repeat(70));
    
    console.log(`\nüìà HISTORIAL DE INVERSI√ìN:`);
    console.log(`   Valor: $${investment.historialInversion?.toLocaleString('es-CO') || 'N/A'}`);
    console.log(`   Descripci√≥n: ${investment.descriptions?.historialInversion || 'N/A'}`);
    
    console.log(`\nüì¶ COSTO ACTUAL INVENTARIO:`);
    console.log(`   Valor: $${investment.costoActualInventario?.toLocaleString('es-CO') || 'N/A'}`);
    console.log(`   Descripci√≥n: ${investment.descriptions?.costoActualInventario || 'N/A'}`);
    
    console.log(`\nüí∞ VALOR VENDIDO:`);
    console.log(`   Valor: $${investment.valorVendido?.toLocaleString('es-CO') || 'N/A'}`);
    console.log(`   Descripci√≥n: ${investment.descriptions?.valorVendido || 'N/A'}`);
    
    console.log(`\nüîÑ ROTACI√ìN DE INVENTARIO:`);
    console.log(`   Valor: ${investment.rotacionInventario?.toFixed(1) || 'N/A'}%`);
    console.log(`   Descripci√≥n: ${investment.descriptions?.rotacionInventario || 'N/A'}`);
    
    console.log(`\n‚ö° EFICIENCIA DE INVERSI√ìN:`);
    console.log(`   Ratio: ${investment.eficienciaInversion?.toFixed(2) || 'N/A'}`);
    
    // Validar coherencia
    console.log("\nüî¨ VALIDACI√ìN DE COHERENCIA:");
    console.log("=".repeat(50));
    
    const historial = investment.historialInversion || 0;
    const actual = investment.costoActualInventario || 0;
    const vendido = investment.valorVendido || 0;
    
    const sumaCalculada = actual + vendido;
    const diferencia = Math.abs(historial - sumaCalculada);
    
    console.log(`Historial de Inversi√≥n: $${historial.toLocaleString('es-CO')}`);
    console.log(`Inventario Actual: $${actual.toLocaleString('es-CO')}`);
    console.log(`Valor Vendido: $${vendido.toLocaleString('es-CO')}`);
    console.log(`Suma (Actual + Vendido): $${sumaCalculada.toLocaleString('es-CO')}`);
    console.log(`Diferencia: $${diferencia.toLocaleString('es-CO')}`);
    
    if (diferencia <= 1000) {
      console.log("‚úÖ COHERENCIA PERFECTA: Los n√∫meros cuadran");
    } else if (diferencia <= 50000) {
      console.log("‚ö†Ô∏è  COHERENCIA BUENA: Diferencia peque√±a");
    } else {
      console.log("‚ùå INCOHERENCIA: Diferencia significativa");
    }
    
    // Comparar con tus capturas de pantalla
    console.log("\nüì± COMPARACI√ìN CON TUS CAPTURAS:");
    console.log("=".repeat(50));
    
    const expectedCostoReal = 7204800;      // Primer captura
    const expectedCostoPromedio = 8695800;  // Segunda captura
    
    console.log(`\nCAPTURA 1 - "Costo Real": $${expectedCostoReal.toLocaleString('es-CO')}`);
    console.log(`CALCULADO - Historial Inversi√≥n: $${historial.toLocaleString('es-CO')}`);
    console.log(`Diferencia: $${Math.abs(historial - expectedCostoReal).toLocaleString('es-CO')}`);
    
    console.log(`\nCAPTURA 2 - "Costo Promedio": $${expectedCostoPromedio.toLocaleString('es-CO')}`);
    console.log(`CALCULADO - Costo Actual: $${actual.toLocaleString('es-CO')}`);
    console.log(`Diferencia: $${Math.abs(actual - expectedCostoPromedio).toLocaleString('es-CO')}`);
    
    // An√°lisis de las diferencias
    console.log("\nüí° AN√ÅLISIS:");
    console.log("=".repeat(40));
    
    if (historial > actual) {
      const porcentajeVendido = historial > 0 ? ((historial - actual) / historial) * 100 : 0;
      console.log(`‚úÖ Has vendido ${porcentajeVendido.toFixed(1)}% de tu inversi√≥n hist√≥rica`);
      console.log(`‚úÖ Te queda ${(100 - porcentajeVendido).toFixed(1)}% del inventario original`);
    } else {
      console.log("‚ö†Ô∏è  El costo actual es mayor que la inversi√≥n hist√≥rica");
    }
    
  } catch (error) {
    console.error("‚ùå Error:", error.message);
    
    // Fallback: calcular manualmente desde el inventario
    console.log("\nüîÑ CALCULANDO MANUALMENTE DESDE INVENTARIO...");
    try {
      const products = await fetchData('https://angelos-web-t1o7.onrender.com/api/inventory');
      
      let costoActual = 0;
      let productosConStock = 0;
      
      products.forEach(product => {
        const stock = product.stock || 0;
        const cost = parseFloat(product.costAverage) || 0;
        costoActual += stock * cost;
        if (stock > 0) productosConStock++;
      });
      
      console.log(`\nüì¶ COSTO ACTUAL INVENTARIO (manual): $${costoActual.toLocaleString('es-CO')}`);
      console.log(`üìä Productos con stock: ${productosConStock}/${products.length}`);
      
    } catch (fallbackError) {
      console.error("‚ùå Error en fallback:", fallbackError.message);
    }
  }
}

testClearMetrics();
